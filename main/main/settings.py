"""
Django settings for main project.

Generated by 'django-admin startproject' using Django 5.0.
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-h1j3gv&1@1k#r!+=-mo5he!v2@91__jb6+to7!k=^grw*m!0_-'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

# Update allowed hosts (remove protocol)
ALLOWED_HOSTS = ['www.gunyapgrup.com.tr', '127.0.0.1']

CSRF_TRUSTED_ORIGINS = ['https://www.gunyapgrup.com.tr']
CSRF_USE_SESSIONS = True 

DEFAULT_FROM_EMAIL = 'bildirim@gunyapgrup.com.tr'
EMAIL_RECIPIENT_LIST = ['info@gunyapgrup.com.tr', 'muhasebe@gunyapgrup.com.tr']

# Application definition
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'proje.apps.ProjeConfig',
    'slayt.apps.SlaytConfig',
    'pages.apps.PagesConfig',
    'hizmet.apps.HizmetConfig',
    'kurumsal.apps.KurumsalConfig',
    'hesap.apps.HesapConfig',
    'kariyer.apps.KariyerConfig',
    'mesaj.apps.MesajConfig',
    'dosya.apps.DosyaConfig',
    'sirket.apps.SirketConfig',
    'ckeditor'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'main.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'main.wsgi.application'

# Database
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

# Password validation
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
LANGUAGE_CODE = 'tr'
TIME_ZONE = 'Europe/Istanbul'
USE_I18N = True
USE_TZ = True

# Static files (CSS, JavaScript, Images)
STATIC_URL = '/assets/'
STATICFILES_DIRS = [os.path.join(BASE_DIR, 'assets')]
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')  # Directory for collectstatic

# Use WhiteNoise storage to enable compression and caching of static files
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# Default primary key field type
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

THUMBNAIL_ALIASES = {
    "": {
        "small": {"size": (150, 150)}
    },
}

LOGOUT_REDIRECT_URL = '/'  # Redirect after logout
